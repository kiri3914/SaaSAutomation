# ===========================================
# SaaSAutomation Environment Configuration
# ===========================================
# Скопируйте этот файл в .env и заполните реальными значениями

# ===========================================
# DJANGO CORE SETTINGS
# ===========================================

# Режим отладки (1 для разработки, 0 для продакшена)
DEBUG=1

# Секретный ключ Django (ОБЯЗАТЕЛЬНО измените в продакшене!)
SECRET_KEY=your-secret-key-here

# Домены и IP адреса для ALLOWED_HOSTS
SERVER_DOMAIN=localhost
SERVER_IP=127.0.0.1

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# Для разработки используется SQLite (автоматически)
# Для продакшена настройте PostgreSQL:

# PostgreSQL настройки
DB_NAME=saasautomation_db
DB_USER=your_db_user
DB_PASSWORD=your_db_password
DB_HOST=localhost
DB_PORT=5432

# ===========================================
# EMAIL CONFIGURATION
# ===========================================

# Email backend (smtp, console, file)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP настройки
EMAIL_HOST=smtp.gmail.com
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
EMAIL_PORT=587
EMAIL_USE_TLS=True
DEFAULT_FROM_EMAIL=your-email@gmail.com

# ===========================================
# TELEGRAM BOT CONFIGURATION
# ===========================================

# Telegram Bot Token (получите у @BotFather)
TELEGRAM_BOT_TOKEN=your-telegram-bot-token

# Chat ID для уведомлений
CHAT_ID=your-chat-id

# ===========================================
# REDIS CONFIGURATION (для Celery)
# ===========================================

# Redis URL для Celery
REDIS_URL=redis://localhost:6379/0

# ===========================================
# SECURITY SETTINGS
# ===========================================

# CORS настройки
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# CSRF настройки
CSRF_TRUSTED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ===========================================
# FILE STORAGE
# ===========================================

# AWS S3 настройки (опционально)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_STORAGE_BUCKET_NAME=your-s3-bucket
AWS_S3_REGION_NAME=us-east-1

# ===========================================
# LOGGING
# ===========================================

# Уровень логирования
LOG_LEVEL=INFO

# ===========================================
# THIRD-PARTY SERVICES
# ===========================================

# Social Auth настройки (если используется)
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=your-google-oauth2-key
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=your-google-oauth2-secret

# Payment Gateway (если используется)
PAYMENT_GATEWAY_API_KEY=your-payment-api-key
PAYMENT_GATEWAY_SECRET=your-payment-secret

# ===========================================
# DEVELOPMENT SETTINGS
# ===========================================

# Отключить миграции в тестах
TESTING=False

# Показать SQL запросы
SHOW_SQL=False

# ===========================================
# PRODUCTION SETTINGS
# ===========================================

# Статические файлы (для продакшена)
STATIC_ROOT=/path/to/static/files

# Медиа файлы (для продакшена)
MEDIA_ROOT=/path/to/media/files

# ===========================================
# MONITORING & ANALYTICS
# ===========================================

# Sentry DSN (для мониторинга ошибок)
SENTRY_DSN=your-sentry-dsn

# Google Analytics
GOOGLE_ANALYTICS_ID=your-ga-id

# ===========================================
# CACHE CONFIGURATION
# ===========================================

# Redis для кеширования
CACHE_URL=redis://localhost:6379/1

# ===========================================
# CELERY CONFIGURATION
# ===========================================

# Celery broker URL
CELERY_BROKER_URL=redis://localhost:6379/0

# Celery result backend
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ===========================================
# NOTES
# ===========================================
# 1. Никогда не коммитьте .env файл в git!
# 2. Используйте разные .env файлы для разных окружений
# 3. Регулярно обновляйте секретные ключи
# 4. Используйте сильные пароли для продакшена
# 5. Настройте HTTPS в продакшене
